package com.gmail.safecart.scanResultLib

import com.gmail.safecart.AppsConstants

class Find {
    companion object {
        private const val startIndex = 0
        private const val endIndex = 3
        private const val countryCodePrefix = 3

        fun country(code: String): String {

            if (code.trim().length >= countryCodePrefix) {
                try {
                    return when (code.trim().substring(startIndex, endIndex).toInt()) {
                        in 1..19 -> "United States"
                        in 20..29 -> "${AppsConstants.noCountry} | Used to issue Restricted Circulation Numbers within a geographic region (MO defined)"
                        in 30..39 -> "United States"
                        in 40..49 -> "${AppsConstants.noCountry} | Used to issue Restricted Circulation Numbers within a company"
                        in 50..59 -> "US reserved for future use"
                        in 60..139 -> "United States"
                        in 200..299 -> "${AppsConstants.noCountry} | Used to issue Restricted Circulation Numbers within a geographic region (MO defined)"
                        in 300..379 -> "France"
                        380 -> "Bulgaria"
                        383 -> "Slovenija"
                        385 -> "Croatia"
                        387 -> "Bosnia and Herzegovina"
                        389 -> "Montenegro"
                        in 400..440 -> "Germany"
                        in 450..459 -> "Japan"
                        in 460..469 -> "Russia"
                        470 -> "Kyrgyzstan"
                        471 -> "Taiwan"
                        474 -> "Estonia"
                        475 -> "Latvia"
                        476 -> "Azerbaijan"
                        477 -> "Lithuania"
                        478 -> "Uzbekistan"
                        479 -> "Sri Lanka"
                        480 -> "Philippines"
                        481 -> "Belarus"
                        482 -> "Ukraine"
                        483 -> "Turkmenistan"
                        484 -> "Moldova"
                        485 -> "Armenia"
                        486 -> "Georgia"
                        487 -> "Kazakstan"
                        488 -> "Tajikistan"
                        489 -> "Hong Kong, China"
                        in 490..499 -> "Japan"
                        in 500..509 -> "United Kingdom"
                        in 520..521 -> "Greece"
                        528 -> "Lebanon"
                        529 -> "Cyprus"
                        530 -> "Albania"
                        531 -> "Macedonia"
                        535 -> "Malta"
                        539 -> "Ireland"
                        in 540..549 -> "Belgium & Luxembourg"
                        560 -> "Portugal"
                        569 -> "Iceland"
                        in 570..579 -> "Denmark"
                        590 -> "Poland"
                        594 -> "Romania"
                        599 -> "Hungary"
                        in 600..601 -> "South Africa"
                        603 -> "Ghana"
                        604 -> "Senegal"
                        605 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        606 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        607 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        608 -> "Bahrain"
                        609 -> "Mauritius"
                        610 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        611 -> "Morocco"
                        613 -> "Algeria"
                        614 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        615 -> "Nigeria"
                        616 -> "Kenya"
                        617 -> "Cameroon"
                        618 -> "CÃ´te d'Ivoire"
                        619 -> "Tunisia"
                        620 -> "Tanzania"
                        621 -> "Syria"
                        622 -> "Egypt"
                        623 -> "Brunei"
                        624 -> "Libya"
                        625 -> "Jordan"
                        626 -> "Iran"
                        627 -> "Kuwait"
                        628 -> "Saudi Arabia"
                        629 -> "Emirates"
                        630 -> "Qatar"
                        631 -> "Namibia"
                        in 640..649 -> "Finland"
                        in 690..699 -> "China"
                        in 700..709 -> "Norway"
                        729 -> "Israel"
                        in 730..739 -> "Sweden"
                        740 -> "Guatemala"
                        741 -> "El Salvador"
                        742 -> "Honduras"
                        743 -> "Nicaragua"
                        744 -> "Costa Rica"
                        745 -> "Panama"
                        746 -> "Republica Dominicana"
                        750 -> "Mexico"
                        in 754..755 -> "Canada"
                        758 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        759 -> "Venezuela"
                        in 760..769 -> "Switzerland"
                        in 770..771 -> "Colombia"
                        773 -> "Uruguay"
                        775 -> "Peru"
                        777 -> "Bolivia"
                        in 778..779 -> "Argentina"
                        780 -> "Chile"
                        784 -> "Paraguay"
                        786 -> "Ecuador"
                        in 789..790 -> "Brazil"
                        in 800..839 -> "Italy"
                        in 840..849 -> "Spain"
                        850 -> "Cuba"
                        858 -> "Slovakia"
                        859 -> "Czech"
                        860 -> "Serbia"
                        865 -> "Mongolia"
                        867 -> "North Korea"
                        in 868..869 -> "Turkey"
                        in 870..879 -> "Netherlands"
                        880 -> "South Korea"
                        883 -> "Myanmar"
                        884 -> "Cambodia"
                        885 -> "Thailand"
                        888 -> "Singapore"
                        890 -> "India"
                        893 -> "Vietnam"
                        894 -> "${AppsConstants.noCountry} | Managed by Global Office for future MO"
                        896 -> "Pakistan"
                        899 -> "Indonesia"
                        in 900..919 -> "Austria"
                        in 930..939 -> "Australia"
                        in 940..949 -> "New Zealand"
                        950 -> "${AppsConstants.noCountry} | GS1 Global Office"
                        951 -> "${AppsConstants.noCountry} | GS1 Global Office"
                        952 -> "${AppsConstants.noCountry} | Used for demonstrations and examples of GS1 system"
                        955 -> "Malaysia"
                        958 -> "Macau, China"
                        in 960..969 -> "${AppsConstants.noCountry} | Global Office"
                        977 -> "${AppsConstants.noCountry} | Serial publications (ISSN)"
                        in 978..979 -> "${AppsConstants.noCountry} | Bookland (ISBN)"
                        980 -> "${AppsConstants.noCountry} | Refund receipts"
                        in 981..984 -> "${AppsConstants.noCountry} | coupon identification for common currency areas"

                        else -> "UNKNOWN!"
                    }
                } catch (e: NumberFormatException) {
                    e.printStackTrace()
                    /** this is catches when input is not a number/whitespace
                     * when catching error, enter in "Logcat" search ...
                     * ... err
                     * ... system.err
                     * ... java.lang.NumberFormatException:
                     * ... or your input
                     * */
                }
            } else {
                return "input length should be > ${code.trim().length}"
            }
            return "search was not performed, check your inputs and try again"
        }
        @Suppress("unused")
        fun country0(code: String): String{
            try {
                when (code.trim().substring(startIndex, endIndex).toInt()) {
                    in 0..19 -> return "Canada"
                    in 0..19 -> return "United States"
                    in 30..39 -> return "United States (drugs)"
                    in 60..99 -> return "Canada"
                    in 60..99 -> return "United States"
                    in 100..139 -> return "United States"
                    in 300..379 -> return "Monaco"
                    in 300..379 -> return "France"
                    380 -> return "Bulgaria"
                    383 -> return "Slovenia"
                    385 -> return "Croatia"
                    387 -> return "Bosnia & Herzegovina"
                    389 -> return "Montenegro"
                    390 -> return "Kosovo"
                    in 400..440 -> return "Germany"
                    in 450..459 -> return "Japan"
                    in 460..469 -> return "Russia"
                    470 -> return "Kyrgyzstan"
                    471 -> return "Taiwan"
                    474 -> return "Estonia"
                    475 -> return "Latvia"
                    476 -> return "Azerbaijan"
                    477 -> return "Lithuania"
                    478 -> return "Uzbekistan"
                    479 -> return "Sri Lanka"
                    480 -> return "Philippines"
                    481 -> return "Belarus"
                    482 -> return "Ukraine"
                    483 -> return "Turkmenistan"
                    484 -> return "Moldova"
                    485 -> return "Armenia"
                    486 -> return "Georgia"
                    487 -> return "Kazakhstan"
                    488 -> return "Tajikistan"
                    489 -> return "Hong Kong"
                    in 490..499 -> return "Japan"
                    in 500..509 -> return "United Kingdom"
                    in 520..521 -> return "Greece"
                    528 -> return "Lebanon"
                    529 -> return "Cyprus"
                    530 -> return "Albania"
                    531 -> return "North Macedonia"
                    535 -> return "Malta"
                    539 -> return "Ireland"
                    in 540..549 -> return "Luxembourg"
                    in 540..549 -> return "Belgium"
                    560 -> return "Portugal"
                    569 -> return "Iceland"
                    in 570..579 -> return "Faroe Islands"
                    in 570..579 -> return "Greenland"
                    in 570..579 -> return "Denmark"
                    590 -> return "Poland"
                    594 -> return "Romania"
                    599 -> return "Hungary"
                    in 600..601 -> return "South Africa"
                    603 -> return "Ghana"
                    604 -> return "Senegal"
                    608 -> return "Bahrain"
                    609 -> return "Mauritius"
                    611 -> return "Morocco"
                    613 -> return "Algeria"
                    615 -> return "Nigeria"
                    616 -> return "Kenya"
                    617 -> return "Cameroon"
                    618 -> return "Ivory Coast"
                    619 -> return "Tunisia"
                    620 -> return "Tanzania"
                    621 -> return "Syria"
                    622 -> return "Egypt"
                    623 -> return "Brunei"
                    624 -> return "Libya"
                    625 -> return "Jordan"
                    626 -> return "Iran"
                    627 -> return "Kuwait"
                    628 -> return "Saudi Arabia"
                    629 -> return "United Arab Emirates"
                    630 -> return "Qatar"
                    631 -> return "Namibia"
                    in 640..649 -> return "Finland"
                    in 690..699 -> return "China"
                    in 700..709 -> return "Norway"
                    729 -> return "Israel"
                    in 730..739 -> return "Sweden"
                    740 -> return "Guatemala"
                    741 -> return "El Salvador"
                    742 -> return "Honduras"
                    743 -> return "Nicaragua"
                    744 -> return "Costa Rica"
                    745 -> return "Panama"
                    746 -> return "Dominican Republic"
                    750 -> return "Mexico"
                    in 754..755 -> return "Canada"
                    759 -> return "Venezuela"
                    in 760..769 -> return "Liechtenstein"
                    in 760..769 -> return "Switzerland"
                    in 770..771 -> return "Colombia"
                    773 -> return "Uruguay"
                    775 -> return "Peru"
                    777 -> return "Bolivia"
                    in 778..779 -> return "Argentina"
                    780 -> return "Chile"
                    784 -> return "Paraguay"
                    786 -> return "Ecuador"
                    in 789..790 -> return "Brazil"
                    in 800..839 -> return "San Marino"
                    in 800..839 -> return "Vatican City"
                    in 800..839 -> return "Italy"
                    in 840..849 -> return "Andorra"
                    in 840..849 -> return "Spain"
                    850 -> return "Cuba"
                    858 -> return "Slovakia"
                    859 -> return "Czech Republic"
                    in 506..860 -> return "Serbia"
                    865 -> return "Mongolia"
                    867 -> return "North Korea"
                    in 868..869 -> return "Turkey"
                    in 870..879 -> return "Netherlands"
                    880 -> return "South Korea"
                    883 -> return "Myanmar"
                    884 -> return "Cambodia"
                    885 -> return "Thailand"
                    888 -> return "Singapore"
                    890 -> return "India"
                    893 -> return "Vietnam"
                    894 -> return "Bangladesh"
                    896 -> return "Pakistan"
                    899 -> return "Indonesia"
                    in 900..919 -> return "Austria"
                    in 930..939 -> return "Australia"
                    in 940..949 -> return "New Zealand"
                    955 -> return "Malaysia"
                    958 -> return "Macau"
                    in 960..961 -> return "United Kingdom"

                    else -> return "code does not exists"
                }
            }catch (e: NumberFormatException) {
                e.printStackTrace()
                /** this is catches when input is not a number/whitespace
                 * when catching error, enter in "Logcat" search ...
                 * ... err
                 * ... system.err
                 * ... java.lang.NumberFormatException:
                 * ... or your input
                 * */
            }
            return "search was not performed, check your inputs and try again"
        }
    }
}